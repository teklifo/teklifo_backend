// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EntityType {
  physical
  legal
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  image Json?
  password String
  isActive Boolean @default(false)
  activationToken String? @unique
  activationTokenExpires DateTime?
  resetPasswordToken String? @unique
  resetPasswordTokenExpires DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  companies UsersAndCompanies[]
}

model Company {
  id Int @id @default(autoincrement())
  name String @unique
  tin String @unique
  entityType EntityType
  image Json?
  description String
  shortDescription String?
  contacts Json?
  socials Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users UsersAndCompanies[]
  products Product[]
}

model UsersAndCompanies {
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId Int
   @@id([userId, companyId])
}

model Product {
  id Int @id @default(autoincrement())
  fullId String @unique // A unique combination of companyId, number and characteristicId
  number String
  characteristicId String
  groupId String // Used to group same products of different characteristics
  barcode String
  name String
  unit String
  vat String
  description String
  sellPrice Int
  inStock Int
  images Json[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId Int
}